# Don't send the nginx version number in error pages and server header
server_tokens off;

# Don't allow the page to render inside a frame of an iframe
add_header X-Frame-Options DENY;

# Disable sniffing for user supplied content
add_header X-Content-Type-Options nosniff;

# Allow everything but only from the same origin
add_header Content-Security-Policy "default-src 'self';";

# Add the HSTS header for all subdomains
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";


# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}


# Proxy HTTPS to HTTP on port 8080 to the Java application
server {
    charset utf-8;
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 172.16.0.23 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    location / {
        proxy_pass       http://127.0.0.1:8080;
        proxy_redirect   off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }
}
