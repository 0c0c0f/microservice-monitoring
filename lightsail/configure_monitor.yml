- hosts: monitor
  remote_user: ubuntu
  become: true
  gather_facts: yes


  vars_files:
    - variables.yml


  post_tasks:
    - name: Get the local user
      command: whoami
      register: local_username
      delegate_to: 127.0.0.1
      become: false
    - name: Store the playbook run event in Elasticsearch so it can be used as an annotation
      command: >
        curl -XPOST "{{ elasticsearch_host }}/events/deployment"
             -u "{{ elasticsearch_user }}:{{ elasticsearch_password }}"
             -H "Content-Type: application/json"
             -d '{
                  "@timestamp": "{{ ansible_date_time.iso8601 }}",
                  "application": "configure_monitor",
                  "system": "ansible",
                  "host": "{{ inventory_hostname }}",
                  "user": "{{ local_username.stdout }}"
                }'


  tasks:


    # Heartbeat
    - name: Install Heartbeat
      apt: deb={{ elastic_download }}/downloads/beats/heartbeat/heartbeat-{{ elastic_version }}-amd64.deb

    - name: Change the Heartbeat configuration
      template: src=templates/heartbeat.yml dest=/etc/heartbeat/heartbeat.yml

    - name: Restart Heartbeat and make sure it autostarts
      service: name=heartbeat-elastic state=restarted enabled=yes


    # Dashboard user
    - name: Create a role for a user to only view the dashboards
      command: >
        curl -XPUT "{{ elasticsearch_host }}/.security-v6/doc/role-read_dashboard"
             -u "{{ elasticsearch_user }}:{{ elasticsearch_password }}"
             -H "Content-Type: application/json"
             -d '{
                  "cluster": [],
                  "indices": [
                    {
                      "names": [
                        "heartbeat-*",
                        "packetbeat-*",
                        "auditbeat-*",
                        "metricbeat-*",
                        "filebeat-*"
                      ],
                      "privileges": [
                        "read"
                      ],
                      "field_security": {
                        "grant": [
                          "*"
                        ]
                      }
                    }
                  ],
                  "run_as": [],
                  "metadata": {},
                  "type": "role"
                }'
      delegate_to: 127.0.0.1
      become: false

    - name: Create the dashboard user with the credentials admin password
      command: >
        curl -XPUT "{{ elasticsearch_host }}/.security-v6/doc/user-admin"
             -u "{{ elasticsearch_user }}:{{ elasticsearch_password }}"
             -H "Content-Type: application/json"
             -d '{
                  "username": "admin",
                  "password": "$2a$10$jGHas/yjV7dY/Pw2a0aeDu92zu.M16dkGbwdf8zGT8uXdMZ3Q9ghi",
                  "roles": [
                    "read_dashboard",
                    "kibana_dashboard_only_user"
                  ],
                  "full_name": "Dashboard User",
                  "email": "dashboard@xeraa.wtf",
                  "metadata": {},
                  "enabled": true,
                  "type": "user"
                }'
      delegate_to: 127.0.0.1
      become: false


    # Watcher
    - name: Add an example Watch from a local file
      command: >
        curl -XPUT "{{ elasticsearch_host }}/_xpack/watcher/watch/heap"
             -u "{{ elasticsearch_user }}:{{ elasticsearch_password }}"
             -H "Content-Type: application/json"
             -d "@files/watch-heap.json"
      delegate_to: 127.0.0.1
      become: false
